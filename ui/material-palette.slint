export struct MaterialVariants {
    m: brush,
    m-50: brush,
    m-100: brush,
    m-200: brush,
    m-300: brush,
    m-400: brush,
    m-500: brush,
    m-600: brush,
    m-700: brush,
    m-800: brush,
    m-900: brush,
    m-A100: brush,
    m-A200: brush,
    m-A400: brush,
    m-A700: brush,
}

export global MaterialPalette {
    out property <[string]> colors: [
        "red",
        "pink",
        "purple",
        "deepPurple",
        "indigo",
        "blue",
        "lightBlue",
        "cyan",
        "teal",
        "green",
        "lightGreen",
        "lime",
        "yellow",
        "amber",
        "orange",
        "deepOrange",
        "brown",
        "grey",
        "blueGrey",
    ];

    out property <MaterialVariants> red: {
        m: #f44336,
        m-50: #ffebee,
        m-100: #ffcdd2,
        m-200: #ef9a9a,
        m-300: #e57373,
        m-400: #ef5350,
        m-500: #f44336,
        m-600: #e53935,
        m-700: #d32f2f,
        m-800: #c62828,
        m-900: #b71c1c,
        m-A100: #ff8a80,
        m-A200: #ff5252,
        m-A400: #ff1744,
        m-A700: #d50000,
    };

    out property <MaterialVariants> pink: {
        m: #e91e63,
        m-50: #fce4ec,
        m-100: #f8bbd0,
        m-200: #f48fb1,
        m-300: #f06292,
        m-400: #ec407a,
        m-500: #e91e63,
        m-600: #d81b60,
        m-700: #c2185b,
        m-800: #ad1457,
        m-900: #880e4f,
        m-A100: #ff80ab,
        m-A200: #ff4081,
        m-A400: #f50057,
        m-A700: #c51162,
    };

    out property <MaterialVariants> purple: {
        m: #9c27b0,
        m-50: #f3e5f5,
        m-100: #e1bee7,
        m-200: #ce93d8,
        m-300: #ba68c8,
        m-400: #ab47bc,
        m-500: #9c27b0,
        m-600: #8e24aa,
        m-700: #7b1fa2,
        m-800: #6a1b9a,
        m-900: #4a148c,
        m-A100: #ea80fc,
        m-A200: #e040fb,
        m-A400: #d500f9,
        m-A700: #aa00ff,
    };

    out property <MaterialVariants> deepPurple: {
        m: #673ab7,
        m-50: #ede7f6,
        m-100: #d1c4e9,
        m-200: #b39ddb,
        m-300: #9575cd,
        m-400: #7e57c2,
        m-500: #673ab7,
        m-600: #5e35b1,
        m-700: #512da8,
        m-800: #4527a0,
        m-900: #311b92,
        m-A100: #b388ff,
        m-A200: #7c4dff,
        m-A400: #651fff,
        m-A700: #6200ea,
    };

    out property <MaterialVariants> indigo: {
        m: #3f51b5,
        m-50: #e8eaf6,
        m-100: #c5cae9,
        m-200: #9fa8da,
        m-300: #7986cb,
        m-400: #5c6bc0,
        m-500: #3f51b5,
        m-600: #3949ab,
        m-700: #303f9f,
        m-800: #283593,
        m-900: #1a237e,
        m-A100: #8c9eff,
        m-A200: #536dfe,
        m-A400: #3d5afe,
        m-A700: #304ffe,
    };

    out property <MaterialVariants> blue: {
        m: #2196f3,
        m-50: #e3f2fd,
        m-100: #bbdefb,
        m-200: #90caf9,
        m-300: #64b5f6,
        m-400: #42a5f5,
        m-500: #2196f3,
        m-600: #1e88e5,
        m-700: #1976d2,
        m-800: #1565c0,
        m-900: #0d47a1,
        m-A100: #82b1ff,
        m-A200: #448aff,
        m-A400: #2979ff,
        m-A700: #2962ff,
    };

    out property <MaterialVariants> lightBlue: {
        m: #03a9f4,
        m-50: #e1f5fe,
        m-100: #b3e5fc,
        m-200: #81d4fa,
        m-300: #4fc3f7,
        m-400: #29b6f6,
        m-500: #03a9f4,
        m-600: #039be5,
        m-700: #0288d1,
        m-800: #0277bd,
        m-900: #01579b,
        m-A100: #80d8ff,
        m-A200: #40c4ff,
        m-A400: #00b0ff,
        m-A700: #0091ea,
    };

    out property <MaterialVariants> cyan: {
        m: #00bcd4,
        m-50: #e0f7fa,
        m-100: #b2ebf2,
        m-200: #80deea,
        m-300: #4dd0e1,
        m-400: #26c6da,
        m-500: #00bcd4,
        m-600: #00acc1,
        m-700: #0097a7,
        m-800: #00838f,
        m-900: #006064,
        m-A100: #84ffff,
        m-A200: #18ffff,
        m-A400: #00e5ff,
        m-A700: #00b8d4,
    };

    out property <MaterialVariants> teal: {
        m: #009688,
        m-50: #e0f2f1,
        m-100: #b2dfdb,
        m-200: #80cbc4,
        m-300: #4db6ac,
        m-400: #26a69a,
        m-500: #009688,
        m-600: #00897b,
        m-700: #00796b,
        m-800: #00695c,
        m-900: #004d40,
        m-A100: #a7ffeb,
        m-A200: #64ffda,
        m-A400: #1de9b6,
        m-A700: #00bfa5,
    };

    out property <MaterialVariants> green: {
        m: #4caf50,
        m-50: #e8f5e9,
        m-100: #c8e6c9,
        m-200: #a5d6a7,
        m-300: #81c784,
        m-400: #66bb6a,
        m-500: #4caf50,
        m-600: #43a047,
        m-700: #388e3c,
        m-800: #2e7d32,
        m-900: #1b5e20,
        m-A100: #b9f6ca,
        m-A200: #69f0ae,
        m-A400: #00e676,
        m-A700: #00c853,
    };

    out property <MaterialVariants> lightGreen: {
        m: #8bc34a,
        m-50: #f1f8e9,
        m-100: #dcedc8,
        m-200: #c5e1a5,
        m-300: #aed581,
        m-400: #9ccc65,
        m-500: #8bc34a,
        m-600: #7cb342,
        m-700: #689f38,
        m-800: #558b2f,
        m-900: #33691e,
        m-A100: #ccff90,
        m-A200: #b2ff59,
        m-A400: #76ff03,
        m-A700: #64dd17,
    };

    out property <MaterialVariants> lime: {
        m: #cddc39,
        m-50: #f9fbe7,
        m-100: #f0f4c3,
        m-200: #e6ee9c,
        m-300: #dce775,
        m-400: #d4e157,
        m-500: #cddc39,
        m-600: #c0ca33,
        m-700: #afb42b,
        m-800: #9e9d24,
        m-900: #827717,
        m-A100: #f4ff81,
        m-A200: #eeff41,
        m-A400: #c6ff00,
        m-A700: #aeea00,
    };

    out property <MaterialVariants> yellow: {
        m: #ffeb3b,
        m-50: #fffde7,
        m-100: #fff9c4,
        m-200: #fff59d,
        m-300: #fff176,
        m-400: #ffee58,
        m-500: #ffeb3b,
        m-600: #fdd835,
        m-700: #fbc02d,
        m-800: #f9a825,
        m-900: #f57f17,
        m-A100: #ffff8d,
        m-A200: #ffff00,
        m-A400: #ffea00,
        m-A700: #ffd600,
    };

    out property <MaterialVariants> amber: {
        m: #ffc107,
        m-50: #fff8e1,
        m-100: #ffecb3,
        m-200: #ffe082,
        m-300: #ffd54f,
        m-400: #ffca28,
        m-500: #ffc107,
        m-600: #ffb300,
        m-700: #ffa000,
        m-800: #ff8f00,
        m-900: #ff6f00,
        m-A100: #ffe57f,
        m-A200: #ffd740,
        m-A400: #ffc400,
        m-A700: #ffab00,
    };

    out property <MaterialVariants> orange: {
        m: #ff9800,
        m-50: #fff3e0,
        m-100: #ffe0b2,
        m-200: #ffcc80,
        m-300: #ffb74d,
        m-400: #ffa726,
        m-500: #ff9800,
        m-600: #fb8c00,
        m-700: #f57c00,
        m-800: #ef6c00,
        m-900: #e65100,
        m-A100: #ffd180,
        m-A200: #ffab40,
        m-A400: #ff9100,
        m-A700: #ff6d00,
    };

    out property <MaterialVariants> deepOrange: {
        m: #ff5722,
        m-50: #fbe9e7,
        m-100: #ffccbc,
        m-200: #ffab91,
        m-300: #ff8a65,
        m-400: #ff7043,
        m-500: #ff5722,
        m-600: #f4511e,
        m-700: #e64a19,
        m-800: #d84315,
        m-900: #bf360c,
        m-A100: #ff9e80,
        m-A200: #ff6e40,
        m-A400: #ff3d00,
        m-A700: #dd2c00,
    };

    out property <MaterialVariants> brown: {
        m: #795548,
        m-50: #efebe9,
        m-100: #d7ccc8,
        m-200: #bcaaa4,
        m-300: #a1887f,
        m-400: #8d6e63,
        m-500: #795548,
        m-600: #6d4c41,
        m-700: #5d4037,
        m-800: #4e342e,
        m-900: #3e2723,
        m-A100: #d7ccc8,
        m-A200: #bcaaa4,
        m-A400: #8d6e63,
        m-A700: #5d4037,
    };

    out property <MaterialVariants> grey: {
        m: #9e9e9e,
        m-50: #fafafa,
        m-100: #f5f5f5,
        m-200: #eeeeee,
        m-300: #e0e0e0,
        m-400: #bdbdbd,
        m-500: #9e9e9e,
        m-600: #757575,
        m-700: #616161,
        m-800: #424242,
        m-900: #212121,
        m-A100: #f5f5f5,
        m-A200: #eeeeee,
        m-A400: #bdbdbd,
        m-A700: #616161,
    };

    out property <MaterialVariants> blueGrey: {
        m: #607d8b,
        m-50: #eceff1,
        m-100: #cfd8dc,
        m-200: #b0bec5,
        m-300: #90a4ae,
        m-400: #78909c,
        m-500: #607d8b,
        m-600: #546e7a,
        m-700: #455a64,
        m-800: #37474f,
        m-900: #263238,
        m-A100: #cfd8dc,
        m-A200: #b0bec5,
        m-A400: #78909c,
        m-A700: #455a64,
    };

    public pure function variants(name: string) -> MaterialVariants {
        if (name == "red") {
            MaterialPalette.red
        } else if (name == "pink") {
            MaterialPalette.pink
        } else if (name == "purple") {
            MaterialPalette.purple
        } else if (name == "deepPurple") {
            MaterialPalette.deepPurple
        } else if (name == "indigo") {
            MaterialPalette.indigo
        } else if (name == "blue") {
            MaterialPalette.blue
        } else if (name == "lightBlue") {
            MaterialPalette.lightBlue
        } else if (name == "cyan") {
            MaterialPalette.cyan
        } else if (name == "teal") {
            MaterialPalette.teal
        } else if (name == "green") {
            MaterialPalette.green
        } else if (name == "lightGreen") {
            MaterialPalette.lightGreen
        } else if (name == "lime") {
            MaterialPalette.lime
        } else if (name == "yellow") {
            MaterialPalette.yellow
        } else if (name == "amber") {
            MaterialPalette.amber
        } else if (name == "orange") {
            MaterialPalette.orange
        } else if (name == "deepOrange") {
            MaterialPalette.deepOrange
        } else if (name == "brown") {
            MaterialPalette.brown
        } else if (name == "grey") {
            MaterialPalette.grey
        } else if (name == "blueGrey") {
            MaterialPalette.blueGrey
        } else {
            MaterialPalette.green
        }

    }
}

export struct AccentScheme {
    normal: brush,
    faded: brush,
    bright: brush,
    background: brush,
    foreground: brush,
    special: brush,
}

export global MaterialScheme {
    in-out property <bool> dark-color-scheme: true;

    in-out property <string> primary-accent-color: "teal";
    in-out property <string> secondary-accent-color: "deepOrange";

    out property <AccentScheme> background: scheme(dark-color-scheme, "grey");
    out property <AccentScheme> primary-accent: scheme(dark-color-scheme, primary-accent-color);
    out property <AccentScheme> secondary-accent: scheme(dark-color-scheme, secondary-accent-color);

    public pure function variants-to-scheme(dark: bool, variants: MaterialVariants) -> AccentScheme {
        {
            foreground: dark ? variants.m-100 : variants.m-900,
            bright: dark ? variants.m-700 : variants.m-300,
            normal: variants.m-500,
            faded: dark ? variants.m-300 : variants.m-700,
            background: dark ? variants.m-900 : variants.m-100,
            special: variants.m-A700,
        }
    }

    public pure function scheme(dark: bool, name: string) -> AccentScheme {
        variants-to-scheme(dark, MaterialPalette.variants(name))
    }
}

component ColorPaletteSample inherits Rectangle {
    in property <brush> bg;
    in property <brush> fg: #FFFFFF;
    in property <string> text <=> i-label.text;

    background: bg;

    i-label := Text {
        text: "?";
        color: fg;
    }
}

component MaterialVariantsDisplayWidget inherits VerticalLayout {
    in property <string> accent-color: "purple";
    in property <MaterialVariants> colors: MaterialPalette.purple;

    width: 70px;

    ColorPaletteSample { bg: colors.m; text: accent-color; }
    ColorPaletteSample { bg: colors.m-50; text: "50"; }
    ColorPaletteSample { bg: colors.m-100; text: "100"; }
    ColorPaletteSample { bg: colors.m-200; text: "200"; }
    ColorPaletteSample { bg: colors.m-300; text: "300"; }
    ColorPaletteSample { bg: colors.m-400; text: "400"; }
    ColorPaletteSample { bg: colors.m-500; text: "500"; }
    ColorPaletteSample { bg: colors.m-600; text: "600"; }
    ColorPaletteSample { bg: colors.m-700; text: "700"; }
    ColorPaletteSample { bg: colors.m-800; text: "800"; }
    ColorPaletteSample { bg: colors.m-900; text: "900"; }
    ColorPaletteSample { bg: colors.m-A100; text: "A100"; }
    ColorPaletteSample { bg: colors.m-A200; text: "A200"; }
    ColorPaletteSample { bg: colors.m-A400; text: "A400"; }
    ColorPaletteSample { bg: colors.m-A700; text: "A700"; }
}

component MaterialPaletteDisplayWidget inherits HorizontalLayout {
    for color in MaterialPalette.colors : MaterialVariantsDisplayWidget {
        accent-color: color;
        colors: MaterialPalette.variants(color);
    }
}

component AccentSchemeDisplayWidget inherits VerticalLayout {
    in property <bool> dark-color-scheme: MaterialScheme.dark-color-scheme;
    in property <string> accent-color: MaterialScheme.primary-accent-color;
    in property <AccentScheme> palette: MaterialScheme.scheme(dark-color-scheme, accent-color);

    width: 70px;

    ColorPaletteSample { bg: palette.foreground; fg: palette.background; text: "foreground"; }
    ColorPaletteSample { bg: palette.bright; fg: palette.faded; text: "bright"; }
    ColorPaletteSample { bg: palette.normal; fg: Colors.white; text: "normal"; }
    ColorPaletteSample { bg: palette.faded; fg: palette.bright; text: "faded"; }
    ColorPaletteSample { bg: palette.background; fg: palette.foreground; text: "background"; }
    ColorPaletteSample { bg: palette.special; fg: Colors.white; text: "special"; }
}

component AccentSchemesDisplayWidget inherits HorizontalLayout {
    in property <bool> dark-color-scheme;

    for color in MaterialPalette.colors: AccentSchemeDisplayWidget {
        dark-color-scheme: dark-color-scheme;
        accent-color: color;
    }
}

component LabelBar inherits Rectangle {
    in property <brush> bg <=> self.background;
    in property <brush> fg <=> i-label.color;
    in property <string> text <=> i-label.text;
    in property <length> font-size <=> i-label.font-size;

    property <length> y-offset: self.height / 2 - i-label.height / 2;

    background: #000000;
    height: 50px;

    i-label := Text {
        x: parent.x + y-offset;
        color: #FFFFFF;
        font-size: 2rem;
    }
}

import { ScrollView } from "std-widgets.slint";

component PaletteDisplayWindow inherits Window {
    ScrollView {
        VerticalLayout {
            LabelBar { text: "Material Palette"; }
            MaterialPaletteDisplayWidget {}

            LabelBar { text: "Light Accent Palettes"; }
            AccentSchemesDisplayWidget {
                dark-color-scheme: true;
            }

            LabelBar { text: "Dark Accent Palettes"; }
            AccentSchemesDisplayWidget {
                dark-color-scheme: false;
            }
        }
    }
}
